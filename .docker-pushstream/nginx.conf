worker_processes 2;

pid /nginx/nginx.pid;

error_log /nginx/logs/error.log debug;

# Development Mode
# master_process      off;
daemon off;
# worker_rlimit_core  2500M;
# working_directory /tmp;
# debug_points abort;
# env MOCKEAGAIN_VERBOSE;
# env MOCKEAGAIN_WRITE_TIMEOUT_PATTERN;
# env LD_PRELOAD;

events {
	worker_connections 1024;
	use epoll;
}

http {
	# only postpone a single byte, default 1460 bytes
	postpone_output 1;
	access_log /nginx/logs/nginx-http_access.log;

	# Pushstream
	push_stream_shared_memory_size 100m;
	push_stream_max_channel_id_length 100;

	server {
		listen 9080 default_server;
		server_name localhost;

		# define publisher and subscriber endpoints in your server context
		location /channels-stats {
			# activate channels statistics mode for this location
			push_stream_channels_statistics;

			# query string based channel id
			push_stream_channels_path $arg_id;
		}

		location /pub {
			# activate publisher (admin) mode for this location
			push_stream_publisher admin;

			# query string based channel id
			push_stream_channels_path $arg_id;
		}

		location ~ /ws {
			# activate websocket mode for this location
			push_stream_subscriber websocket;

			# positional channel path
			push_stream_channels_path $arg_channels;
			# message template
			push_stream_message_template "{\"id\":~id~,\"channel\":\"~channel~\",\"text\":\"~text~\"}";

			push_stream_websocket_allow_publish on;

			# ping frequency
			push_stream_ping_message_interval 10s;
		}

		location / {
			root /app/public;
		}
	}
}
